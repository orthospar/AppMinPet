
# Optical properties of minerals

We recommend the open access textbook ["Guide to Thin Section Microscopy"](http://www.minsocam.org/msa/OpenAccess_publications/Guide_Thin_Sctn_Mcrscpy_index.html) by Raith, Raase, and Reinhardt (2012) for ongoing use as a detailed reference companion. This textbook is worth getting printed and bound by a high quality professional printing service.

## Plane Polarised Light

### Opacity/Transparency

### Colour

#### Pleochroism

### Relief

### Cleavage and Fracture
 
### Growth Features

#### Habit


#### Zonation

## Cross Polarised Light
The upper polarisation plate (the anlyser) is oriented perpendicular to the orienation direction of the lower polarisation plate. Since the lower polariser is, by convention, orientated in an E-W direction (or left-right), the upper polariser is hence oriented in a N-S direction (or up-down). If no thin section is inserted, then the view through the oculars should be **dark/black**.  

### Birefringence
Upon insertion of the upper polarisation plate (the analyser) the most striking observation is the sudden bright colourful display of [:Interference Colours](https://en.wikipedia.org/wiki/Interference_colour_chart), particularly in minerals such as olivine. Interference colours are only visible in *anisotropic minerals* and arise as a function of thin section thickness and the [:Birefringence](https://en.wikipedia.org/wiki/Birefringence) of the mineral. 


::: {.content-hidden unless-format="html"}
```{r, echo=FALSE, message=FALSE}
library(reshape)
library(dplyr)
library(pavo)

interference <- function(wl, biref){ #function to calculate interference colours
  c <- 299792458 #speed of light (nm/ns), SI units
  t <- seq(0,0.01,0.00001) #time series
  thin <- 30000 #thin section thickness, in nm
  RI <- 1.5 #Refractive Index, using 1.5 as a starting value
  m <- vector() #create empty matrix
  for(b in biref){
    RId <- RI+b #maximum RI
    Retd <- (((thin*RId)/425)-((thin*RI)/425))*425 #using 425nm as wavelength
    n <- vector() #create empty vector
      for(l in wl){#for each wavelength;
        f <- (c/l)/1e3 #convert to frequency, in THz
        phi <- 2*pi*(Retd/l) #Retardation, in multiples of pi/2 (half wavelengths)
        n <- c(n, #append to stored vector the:
              (max(sin(2*pi*f*t)- #max of difference between the O-wave
                   sin((2*pi*f*t)-phi)) #and the E-wave 
           ))
      }
    m <- cbind(m, n)
  }
  
  return(m)
  
}
wl_range <- 300:700 #wavelength, in nm
biref_range <- seq(0.0005,0.2, 0.0005) #birefringence

int_spectra <- round(interference(wl_range, biref_range),2)/2
colnames(int_spectra) <- biref_range
int_spectra <- cbind(data.frame(wl = wl_range), int_spectra)

int_rspec <- spec2rgb(int_spectra, alpha=NULL)
int_rspec <- tibble::rownames_to_column(as.data.frame(int_rspec))
colnames(int_rspec) <- c("biref","hexvis")

int_spectra <- melt(int_spectra, id="wl")%>%
  dplyr::rename(biref = variable)%>%
  left_join(int_rspec, by="biref")

write.csv(int_spectra, "int_spectra.csv")
```

```{ojs}
//| panel: input
viewof biref = Inputs.range(
  [0.0005, 0.14], 
  {value: 0.01, step: 0.0005, label: "Birefringence:"}
)
```

```{ojs}
data_intspec = FileAttachment("int_spectra.csv").csv({ typed: true })
```

```{ojs}
//| label: fig-int_spectra
//| fig-cap: "Spectral contribution to the observed interference colour as a function of birefringence. Assumes a uniform light source (even spectral distribution). The orders of colours can be counted as the first trough passed by 550 nm. Higher order colours (after 3rd order) oscillate between weak pink-green colours and become increasingly white."

Plot.plot({
  x: {label: "Wavelength (nm)"},
  y: {
    domain: [0,1],
    label: "Relative Intensity",
    labelOffset: 0},
  margin: 40,
  marginBottom: 80,
  style: {
    background: "#CCCCCC",
    fontSize: 20,
    color: "Black"
  },
  marks: [
    Plot.areaY(interference_filtered, { 
      x: "wl", 
      y: "value", 
      fill: "hexvis"})
      
      ],
  width: 800
})

```

```{ojs}
interference_filtered = data_intspec.filter(function(intspectra) {
  return biref == intspectra.biref;
})
```
:::


### Extinction Angles

### Twinning

::: {.content-hidden unless-format="html"}
## Further concepts

There are further techniques not covered here, such as obtaining an [:optic figure](https://en.wikipedia.org/wiki/Conoscopic_interference_pattern) and measuring the corresponding optic angle (or 2V). It is sufficient at this stage to know that they *exist* -- we will cover this technique in a later course. There are also a few other concepts that the beginning microscopist should be aware of. These are covered in this section.

### Colour perception

We all see the world differently, and this should not be a disadvantage when it comes to microscopy. Due to the different physical interaction properties of light between dyes and inks, LED/LCD computer screens, camera detectors, and how interference colours arise, it is not suprising that dramatic differences in perception of colours often arise between depictions of what is seen down the microscope versus what is actually observed, even in individuals with full colour perception. 

Figure @fig-ishihara9 is an [:Ishihara]() colour perception plate. This is not a faithful reconstruction (due to colour rendering in various digital display technologies) but it is sufficient to illustrate the point here. You should be able to distinguish the number 74. If you see the number 71, or no number at all, then please alert your demonstrator so that we can help provide you with some extra materials and assistance. For instance, instead of using digitally rendered or print copied of the Michel Levy chart, we will provide you with a quartz wedge plate which can be viewed under cross polarised light to use as the true point of reference for the interference colours. 

[![Ishihara Plate 9. The number 74 should be visible - please alert your demonstrator if you see the number 71 or no number at all.](Ishihara_9.svg "Ishihara Plate 9"){#fig-ishihara9}]("https://commons.wikimedia.org/wiki/File:Ishihara_9.svg")

### Sources of Light

An important effect to take note of is how the generation of interference colours under cross polarised light is also a function of the spectral distribution of light interacting with the crystalline material. For the interference colours to behave as we expect them to as a function of birefringence, it is important to use an even a distribution of light as possible. 

Modern [:LEDs](https://en.wikipedia.org/wiki/Light-emitting_diode) do not produce a uniform or continuous spectral distribution. Even the [Nobel Prize](https://www.nobelprize.org/prizes/physics/2014/press-release/) winning blue LED and its subsequent combination with Ce-doped [:YAG](https://en.wikipedia.org/wiki/Yttrium_aluminium_garnet) as a yellow phosphor still does not produce a sufficiently uniform spectrum suitable for XPL microscopy. 

As such, our microscopes are equipped with [:halogen bulbs](https://en.wikipedia.org/wiki/Halogen_lamp), a modification to the standard tungsten-filament incandescent bulbs of the 20th Century. Yes, it's old-tech, but it's what we have. Notice in Figure @fig-bb_spectra that the light emitted from these bulbs is still skewed towards the yellow-red side of the spectrum. The microscopes compensate for this by filtering some of the yellow-red light to even out the distribution a little and make the general spectrum more 'white'.

The key message is that the bulbs in your microscopes will produce a significant amount of infrared radiation (i.e., ***heat***). Don't leave them on for long periods unattended. When turning them on and off, it is best to start at low voltage and ramp it up slowly (over a couple of seconds) rather than just turn it on at full voltage. This increases wear on the bulbs, and makes them more likely to blow (which is not good if it happens during an exam).

```{r, echo=FALSE, message=FALSE}
library(reshape)
library(readr)
library(dplyr)
library(pavo)

bb <- function(lambda, TK){
     #Planck's law of black-body radiation, where:
     #lambda = wavelength (nm)
     #TK = temperature in Kelvin
      
     #convert temp from nm to m
     lambda <- lambda*1e-9
     
     #Constants:
     c <- 299792458 #speed of light (m/s), SI units
     h <- 6.626e-34 #plank constant (J/Hz), SI units
     k <- 1.38e-23 #boltzmann constant (J/K), SI units 
    
     radiance <- ((2*h*c^2)/(lambda^5))*(1/(exp((h*c)/(lambda*k*TK))-1))
     return(radiance)
}

#function to normalise the spectra to range 0:1
norm_func <- function(x){
    x<-x/max(x)
    return(x)
    }

# calculate spectra
TK_range <- seq(1500,10000,100)
lambda_range <- seq(200,900)

bb_spectra <- data.frame(outer(lambda_range, TK_range, bb))%>%
  transmute(across(everything(), norm_func))
colnames(bb_spectra) <- c(TK_range)
bb_spectra <- bind_cols(data.frame(wl=lambda_range), bb_spectra)

# calculate rgb spectral perception
bb_rspec <- as.rspec(bb_spectra, lim = c(300, 700))
bb_colours <- spec2rgb(bb_rspec, alpha=NULL)
bb_colours <- tibble::rownames_to_column(as.data.frame(bb_colours))
colnames(bb_colours) <- c("temperature", "hexvis")


# build csv file for plotting in ojs
bb_spectra <- melt(bb_spectra, id="wl")%>%
  dplyr::rename(temperature = variable)%>%
  group_by(temperature)%>%
  mutate(value=(value/max(value)))%>%
  left_join(bb_colours, by="temperature")

write.csv(bb_spectra, "bb_spectra.csv")

```

```{ojs}
//| panel: input
viewof TempK = Inputs.range(
  [1500, 10000], 
  {value: 1700, step: 100, label: "Temperature (K):"}
)
```

```{ojs}
data_bbspec = FileAttachment("bb_spectra.csv").csv({ typed: true })
```

```{ojs}
//| label: fig-bb_spectra
//| fig-cap: "Relative spectral distribution of emissions for Black Body Radiation at a given Temperature. The display colour of the curve approximates the perceived colour of this spectrum by the human eye. Compare the spectral output for a Halogen bulb at 3000K vs Daylight at 6500K"

Plot.plot({
  x: {label: "Wavelength (nm)"},
  y: {
    label: "Relative Intensity",
    labelOffset: 0},
  margin: 40,
  marginBottom: 80,
  style: {
    background: "#CCCCCC",
    fontSize: 20,
    color: "Black"
  },
  marks: [
    Plot.image([{ url: "https://upload.wikimedia.org/wikipedia/commons/d/d9/Linear_visible_spectrum.svg"}],
    {
      x: 565,
      y: -0.2,
      width: 383,
      height: width*0.1,
      src: "url"
    }),
    //Plot.ruleX([380]),
    //Plot.ruleX([750]),
    Plot.areaY(filtered, { 
      x: "wl", 
      y: "value", 
      fill: "hexvis"})
      
      ],
  width: 800
})

```

```{ojs}
filtered = data_bbspec.filter(function(bbspectra) {
  return TempK == bbspectra.temperature;
})

```

:::